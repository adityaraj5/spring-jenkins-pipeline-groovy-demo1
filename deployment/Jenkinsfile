pipeline {
    agent any
    
   

    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "mvn"
    }
   
	
	
	
     environment {
	DOCKERHUB_CREDENTIALS = credentials('aditya0405')
}
stages {
stage('Build') {
steps {
sh 'docker build -t lloydmatereke/jenkins-docker-hub .'
}
}
stage('Login') {
steps {
sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
}
}
stage('Push') {
steps {
sh 'docker push lloydmatereke/jenkins-docker-hub'
}
}
}
post {
always {
sh 'docker logout'
}
}
   
	
	
	
	stages {
        stage('Build') {
            steps {
                // Get some code from a GitHub repository
                git url: 'https://github.com/adityaraj5/spring-jenkins-pipeline-groovy-demo1.git'

                // Run Maven on a Unix agent.
                script{
                if(isUnix()){
                sh "mvn -Dmaven.test.failure.ignore=true clean package"
				}	
                else{
                 bat "mvn -Dmaven.test.failure.ignore=true clean package"
                 }
                 }
            }
            }
            
           
           
         stage('Integration Test') {
            steps {
               
                // Run Maven on a Unix agent.
                script{
                if(isUnix()){
                sh "mvn -Dmaven.test.failure.ignore=true clean verify"
				}	
                else{
                 bat "mvn -Dmaven.test.failure.ignore=true clean verify"
                 }
                 }
            }
        
    	}
    	
    	
    	
    	
    }
     post {
                // If Maven was able to run the tests, even if some of the test
                // failed, record the test results and archive the jar file.
                success {
                    jacoco(
                    
                    classPattern: '**/target/classes',
                    sourcePattern: '**/src/main/groovy'
                    
                    )
                    junit '**/target/surefire-reports/TEST-*.xml'
                    archiveArtifacts 'target/*.jar'
                    
                }
            }
            
        
}
